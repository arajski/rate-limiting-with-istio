apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: filter-ratelimit
  namespace: istio-system
spec:
  workloadSelector:
    labels:
      istio: ingressgateway
  configPatches:
    - applyTo: HTTP_FILTER
      match:
        context: GATEWAY
        listener:
          filterChain:
            filter:
              name: 'envoy.filters.network.http_connection_manager'
              subFilter:
                name: 'envoy.filters.http.router'
      patch:
        operation: INSERT_BEFORE
        value:
          name: 'envoy.filters.http.header_to_metadata'
          typed_config:
            '@type': type.googleapis.com/envoy.extensions.filters.http.header_to_metadata.v3.Config
            request_rules:
            - header: ':path'
              on_header_present:
                metadata_namespace: path_without_qs
                key: envoy.path
                regex_value_rewrite:
                  pattern:
                    google_re2: {}
                    regex: '^(\/[\/\d\w-]+)\??.*$'
                  substitution: '\1'
            - header: authorization
              on_header_present:
                key: envoy.auth5
                metadata_namespace: auth5
                regex_value_rewrite:
                  pattern:
                    google_re2: {}
                    regex: ^.*(.{5})$
                  substitution: \1
    - applyTo: HTTP_FILTER
      match:
        context: GATEWAY
        listener:
          filterChain:
            filter:
              name: "envoy.filters.network.http_connection_manager"
              subFilter:
                name: "envoy.filters.http.router"
      patch:
        operation: INSERT_BEFORE
        value:
          name: envoy.filters.http.ratelimit
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimit
            # domain can be anything! Match it to the ratelimter service config
            domain: ratelimit
            failure_mode_deny: true
            timeout: 10s
            rate_limit_service:
              grpc_service:
                envoy_grpc:
                  cluster_name: outbound|8081||ratelimit.ratelimit.svc.cluster.local
                  authority: ratelimit.ratelimit.svc.cluster.local
              transport_api_version: V3
---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: filter-ratelimit-svc
  namespace: istio-system
spec:
  workloadSelector:
    labels:
      istio: ingressgateway
  configPatches:
    - applyTo: VIRTUAL_HOST
      match:
        context: GATEWAY
        routeConfiguration:
          vhost:
            domainName: "api.almost.ai"
      patch:
        operation: MERGE
        value:
          rate_limits:
            - actions:
              - metadata:
                  descriptor_key: path
                  metadata_key:
                    key: path_without_qs
                    path:
                    - key: envoy.path
            - actions:
              - metadata:
                  descriptor_key: path
                  metadata_key:
                    key: path_without_qs
                    path:
                    - key: envoy.path
              - metadata:
                  descriptor_key: auth5
                  metadata_key:
                    key: auth5
                    path:
                    - key: envoy.auth5
            - actions:
              - metadata:
                  descriptor_key: auth5
                  metadata_key:
                    key: auth5
                    path:
                    - key: envoy.auth5
